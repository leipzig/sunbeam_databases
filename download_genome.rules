rule assembly_summary:
    output:
        config['output_dir'] + '/' + '{group}/assembly_summary.txt'
    shell:
        """
        curl 'ftp://ftp.ncbi.nlm.nih.gov/genomes/refseq/{wildcards.group}/assembly_summary.txt' > {output}
        """

rule genome_urls_nucl:
    input:
        config['output_dir'] + '/' + '{group}/assembly_summary.txt'
    output:
        config['output_dir'] + '/' + '{group}/genome_urls_nucl.txt'
    run:
        header = []
        with open(input[0]) as infile:
            infile.readline() # skip garbage line
            header = infile.readline().strip().split('\t')
            header[0] = header[0].replace("# ", "")
            csvfile = csv.DictReader(infile, fieldnames=header, delimiter='\t')
            with open(output[0], 'w') as out:
                writer = csv.DictWriter(
                    out, fieldnames=['taxid','assembly_accession', 'url'], delimiter='\t')
                for row in csvfile:
                    if row.get('ftp_path'):
                        genome_url = convert_to_genome_path(row['ftp_path'])
                        writer.writerow(
                            {'taxid': row['taxid'],'assembly_accession': row['assembly_accession'] ,'url':genome_url})
                        #writer.writerow({'taxid': row['taxid'], 'url':genome_url}) #<- 

rule genome_urls_prot:
    input:
        config['output_dir'] + '/' + '{group}/assembly_summary.txt'
    output:
        config['output_dir'] + '/' + '{group}/genome_urls_prot.txt'
    run:
        header = []
        with open(input[0]) as infile:
            infile.readline() # skip garbage line
            header = infile.readline().strip().split('\t')
            header[0] = header[0].replace("# ", "")
            csvfile = csv.DictReader(infile, fieldnames=header, delimiter='\t')
            with open(output[0], 'w') as out:
                writer = csv.DictWriter(
                    out, fieldnames=['taxid','assembly_accession', 'url'], delimiter='\t')
                for row in csvfile:
                    if row.get('ftp_path'):
                        genome_url  = convert_to_genome_path_ptn(row['ftp_path'])
                        writer.writerow(
                            {'taxid': row['taxid'],'assembly_accession': row['assembly_accession'] ,'url':genome_url})

rule download_nucl:
    input:
        config['output_dir'] + '/' + '{group}/genome_urls_nucl.txt'
    output:
        config['output_dir'] + '/' + '{group}/{acc}.fna.gz'
    run:
        urls = csv.DictReader(open(input[0]), fieldnames=['taxid','assembly_accession','url'], delimiter='\t')
        for row in urls:
            if row['assembly_accession'] == wildcards.acc:
                shell('curl {row[url]} > {output}')
                break

rule download_prot:
    input:
        config['output_dir'] + '/' + '{group}/genome_urls_prot.txt'
    output:
        config['output_dir'] + '/' + '{group}/{acc}.faa.gz'
    run:
        urls = csv.DictReader(open(input[0]), fieldnames=['taxid','assembly_accession','url'], delimiter='\t')
        for row in urls:
            if row['assembly_accession'] == wildcards.acc:
                shell('curl {row[url]} > {output}')
                break

"""
rule gunzip:
    input:
        '{fname}.gz'
    output:
        '{fname}'
    shell:
        "gunzip {input}"

rule rename:
    input:
        '{fname}.faa'
    output:
        '{fname}.fa'
    shell:
        "mv {input} {output}"
"""

rule download_group_nucl:
    input:
        config['output_dir'] + '/' + config['group'] + '/genome_urls_nucl.txt',
        expand(config['output_dir'] + '/' + '{group}/{acc}.fna.gz',
            group=config['group'],
            acc=generate_list(config['output_dir'] + '/' + config['group'] + '/genome_urls_nucl.txt'))


rule download_group_prot:
    input:
        config['output_dir'] + '/' + config['group'] + '/genome_urls_prot.txt',
        expand(config['output_dir'] + '/' + '{group}/{acc}.faa.gz',
            group=config['group'],
            acc=generate_list(config['output_dir'] + '/' + config['group'] + '/genome_urls_prot.txt'))

